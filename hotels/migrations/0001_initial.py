# Generated by Django 2.1.3 on 2019-01-27 22:57

from decimal import Decimal
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Hotel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('country', models.CharField(max_length=50)),
                ('city', models.CharField(max_length=50)),
                ('address', models.CharField(max_length=50)),
                ('address_number', models.CharField(blank=True, max_length=20)),
                ('description', models.TextField(blank=True, max_length=500)),
            ],
        ),
        migrations.CreateModel(
            name='HotelReservation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hotel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hotels.Hotel')),
            ],
        ),
        migrations.CreateModel(
            name='HotelRoom',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('number', models.IntegerField()),
                ('floor_number', models.IntegerField()),
                ('capacity', models.PositiveIntegerField()),
                ('has_balcony', models.BooleanField()),
                ('default_price_per_day', models.DecimalField(decimal_places=2, max_digits=8, validators=[django.core.validators.MinValueValidator(Decimal('0.01'), 'Price cannot be negative')])),
                ('hotel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hotels.Hotel')),
            ],
            options={
                'ordering': ['number'],
            },
        ),
        migrations.CreateModel(
            name='HotelRoomPrice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price_per_day', models.DecimalField(decimal_places=2, max_digits=8, validators=[django.core.validators.MinValueValidator(0, 'Price cannot be negative')])),
                ('valid_from', models.DateField()),
                ('valid_to', models.DateField()),
                ('strictly_discounted', models.BooleanField(default=False)),
                ('room', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hotels.HotelRoom')),
            ],
            options={
                'ordering': ['valid_from'],
            },
        ),
        migrations.CreateModel(
            name='HotelService',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('price', models.DecimalField(decimal_places=2, max_digits=8, validators=[django.core.validators.MinValueValidator(0, 'Price cannot be negative')])),
                ('type_of_charge', models.CharField(choices=[('PPPD', 'per person/day'), ('PP', 'per person'), ('PRPD', 'per room/day'), ('PR', 'per room')], default='PPPD', max_length=4)),
                ('hotel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hotels.Hotel')),
            ],
        ),
        migrations.CreateModel(
            name='HotelServicePackage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('rooms_discount', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(0, 'Percentage is between 0 and 100'), django.core.validators.MaxValueValidator(100, 'Percentage is between 0 and 100')])),
                ('hotel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hotels.Hotel')),
                ('services', models.ManyToManyField(to='hotels.HotelService')),
            ],
        ),
        migrations.AddField(
            model_name='hotelroomprice',
            name='service_package',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='hotels.HotelServicePackage'),
        ),
        migrations.AddField(
            model_name='hotelreservation',
            name='rooms',
            field=models.ManyToManyField(to='hotels.HotelRoom'),
        ),
        migrations.AddField(
            model_name='hotelreservation',
            name='services',
            field=models.ManyToManyField(to='hotels.HotelService'),
        ),
        migrations.AddField(
            model_name='hotelreservation',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterUniqueTogether(
            name='hotelroom',
            unique_together={('hotel', 'number')},
        ),
    ]
